format_version: 1.3.1
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git
app:
  envs:
  - RELEASE_VERSION: 1.0.1
workflows:
  audit-this-step:
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            stepman audit --step-yml ./step.yml
  share-this-step:
    description: |-
      If this is the first time you try to share a Step you should
      first call: $ bitrise share
      This will print you a guide, and information about how Step sharing
      works. Please read it at least once!
      As noted in the Step sharing guide you'll have to fork the
      StepLib you want to share this step into. Once you're done with forking
      the repository you should set your own fork's git clone URL
      in the `.bitrise.secrets.yml` file, or here in the `envs` section,
      as the value of the `MY_STEPLIB_REPO_FORK_GIT_URL` environment.
      You're now ready to share this Step, just make sure that
      the `STEP_ID_IN_STEPLIB` and `STEP_GIT_VERION_TAG_TO_SHARE`
      environments are set to the desired values!
      To share this Step into a StepLib you can just run: $ bitrise run share-this-step
      Once it finishes the only thing left is to actually create a Pull Request,
      the way described in the guide printed at the end of the process.
    before_run:
    - audit-this-step
    envs:
    - MY_STEPLIB_REPO_FORK_GIT_URL: $MY_STEPLIB_REPO_FORK_GIT_URL
    - STEP_ID_IN_STEPLIB: step-change-value
    - STEP_GIT_VERION_TAG_TO_SHARE: $RELEASE_VERSION
    - STEP_GIT_CLONE_URL: https://github.com/bitrise-community/steps-change-value.git
    steps:
    - script:
        inputs:
        - content: |-
            #!/bin/bash
            set -ex
            bitrise share start -c ${MY_STEPLIB_REPO_FORK_GIT_URL}
            bitrise share create --stepid ${STEP_ID_IN_STEPLIB} --tag ${STEP_GIT_VERION_TAG_TO_SHARE} --git ${STEP_GIT_CLONE_URL}
            bitrise share finish
  test:
    envs:
    - TEST_FILE_PATH: ./test.txt
    - ORIGINAL_TEST_FILE_CONTENT: |-
        this is the first line
        the second line
        and finally the third line
    - REPLACE_THIS: second
    - REPLACE_WITH: 2nd
    - EXPECTED_TEST_FILE_CONTENT_AFTER_REPLACE: |-
        this is the first line
        the 2nd line
        and finally the third line
    steps:
    - change-workdir:
        title: Switch working dir to test / _tmp dir
        description: |-
          To prevent step testing issues, like referencing relative
          files with just './some-file' in the step's code, which would
          work for testing the step from this directory directly
          but would break if the step is included in another `bitrise.yml`.
        run_if: "true"
        inputs:
        - path: ./_tmp
        - is_create_path: true
    - script@1.1.3:
        title: generate test input file
        inputs:
        - content: |-
            #!/bin/bash
            set -ex

            echo -n "$ORIGINAL_TEST_FILE_CONTENT" > "$TEST_FILE_PATH"
    - path::./:
        run_if: "true"
        inputs:
        - show_file: "true"
        - file: $TEST_FILE_PATH
        - old_value: $REPLACE_THIS
        - new_value: $REPLACE_WITH
    - script@1.1.3:
        title: test the step's output
        inputs:
        - content: |-
            #!/bin/bash
            set -ex

            file_content="$(cat "$TEST_FILE_PATH")"

            if [[ "$file_content" != "$EXPECTED_TEST_FILE_CONTENT_AFTER_REPLACE" ]] ; then
              echo "Not what we expected!"
              exit 1
            fi

            echo "Perfect!"
